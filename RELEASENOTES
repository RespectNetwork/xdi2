release 0.8 ("OrÈ™ova")
========================

* The relativity symbol has changed from _ to ~

* The DebugHttpTransportInterceptor now shows better Transport information.

* A MessagingResponse may contain one or more PushLinkContract instances, if the result of 
an operation is "deferred".

* link contract now have two policies, the "main" $do$if policy, and the "push" $do$push$if policy.
if the "main" policy evaluates to false, but the "push" policy evaluates to true, then the result of
an operation will be "deferred".

* introducing XDI "system" graph with pre-defined link contract templates.

* link contracts may be singletons $do or collection instances [$do]!:uuid:1234

* introducing standard ConnectLinkContract and "bootstrapConnectLinkContract" setting in BootstrapInterceptor

* GetOperation.XDI_ADD_PARAMETER_DEREF -> XDIMessagingConstants.XDI_ADD_OPERATION_PARAMETER_DEREF

* added XDIAddress.fromComponent(XDIArc) method

* XDIXRef has a .getXDIArc() method instead of .getXDIAddress()

* CloudName.fromXDIAddress() and CloudNumber.fromXDIAddress() now return
null instead of throwing exception if the cloud name / cloud number are invalid

* introducing PushLinkContractInterceptor

* refactoring ProxyContributor into ForwardingContributor

* support discovering cloud names in XDIDiscoveryResult

* changed default discovery service to https://registry.xdi2.org/

* use of URL class mostly replaced with URI

* xdi2.transport.impl.http.registry.HttpMessagingTargetRegistry->
xdi2.transport.registry.impl.uri.UriMessagingTargetRegistry

* xdi2.transport.impl.websocket.WebSocketsListener ->
xdi2.transport.impl.websocket.impl.listener.WebSocketsListener

* more overloaded methods for XDIDiscoveryClient

* xdi2.transport.impl.http.factory.impl.AnyGraphMessagingTargetFactory ->
xdi2.messaging.target.factory.impl.uri.AnyUriMessagingTargetFactory

* xdi2.transport.impl.http.factory.impl.RegistryGraphMessagingTargetFactory ->
xdi2.messaging.target.factory.impl.uri.RegistryUriMessagingTargetFactory

* use Java 1.7 by default, because 1.6. has a DH 1024 bit limitation for SSL connections 

* major updates to XDI agent framework, now supports concepts "XDIAgentRouter" 
and "XDIClientRoute".

* removed class ErrorMessageResult. introduced class MessagingError.
use MessagingResponse.getMessagingError() instead of class ErrorMessageResult.

* introducing class ExecutionResult as a major component of internal message execution

* splitting module "messaging" into "messaging" and "messaging-target"

* replacing class MessageResult with MessagingResponse
instead of MessageResult.getGraph(), use MessagingResponse.getGraph() or MessagingResponse.getResultGraph()

* renaming modules "transport-http-embedded" to "server-embedded",
and "transport-http-standalone" to "server-standalone"
and "transport-http-war" to "server-war"

* splitting module "transport-http" into "transport-http" and "transport-websocket"

* introducing module "server" to depend on "transport-http" and "transport-websocket"

* introducing module "transport-local".
XDILocalClient is now the preferred way to execute messages against graphs locally

* xdi2.core.features.nodetypes.XdiMember -> xdi2.core.features.nodetypes.XdiInstance

* xdi2.core.features.nodetypes.XdiMemberOrdered -> xdi2.core.features.nodetypes.XdiInstanceOrdered

* xdi2.core.features.nodetypes.XdiMemberUnordered -> xdi2.core.features.nodetypes.XdiInstanceUnordered

* In xdi2.core.features.nodetypes.XdiCollection and subclasses, changed various ..Member.. methods to ..Instance..

release 0.7 ("Belgrade")
========================

* Removal of the & value node:
The XdiValue class is removed. The Literal class has been renamed to LiteralNode. 
The ContextNode and LiteralNode classes now share the common Node interface. Many
other classes related to serialization, graph storage, and messaging have been
adapted to these changes. 

* Support for encryption and signatures:
xdi2.core.features.encryption
xdi2.core.features.signatures

* XDIAuthenticationConstants.XDI_ADD_ANONYMOUS -> XDIMessagingConstants.XDI_ADD_ANONYMOUS

* Timestamps.setContextNodeTimestamp() -> Timestamps.setTimestamp()

* XDIConstants.XDI_ADD_VARIABLE -> XDIConstants.XDI_ADD_COMMON_VARIABLE

* Updated variable support in parser and class hierarchy; variables are now nested classes.

* Remove XDIAddressUtil.findXDIAddress(), introduced XDIAddressUtil.extractXDIAddress()

* Literal -> LiteralNode, and implements Node

* setDeepRelation, setDeepLiteral, etc removed, instead do setDeepContextNode(..).setRelation(..)

* To move away from old "XRI" terminology, classes were renamed, e.g.:
XDI3Segment -> XDIAddress
XDI3SubSegment -> XDIArc
XDI3Statement -> XDIStatement

* To move away from old "XRI" terminology, methods were renamed, e.g.:
Message.setLinkContractXri() -> Message.setLinkContractXDIAddress() 

* To move away from old "XRI" terminology, constants were renamed, e.g.:
XRI_S_* -> XDI_ADD_*
XRI_SS_* -> XDI_ARC_*

* Use of the URL class instead of String in discovery:
String xdiEndpointUri = xdiDiscoveryResult.getXdiEndpointUri();
->
URL xdiEndpointUrl = xdiDiscoveryResult.getXdiEndpointUrl();

* Exceptions in xdi2.client were refactored:
Xdi2DiscoveryException, Xdi2ClientException, Xdi2AgentException

* XdiLocalRoot -> XdiCommonRoot

* contributorXris -> contributorAddresses

* The XdiMetaClass class is removed. 
This represented the XDI context nodes [#] and [$], which are not valid anymore.
If you have these context nodes in a graph, you should remove them before upgrading the code.
